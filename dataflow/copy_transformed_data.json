{
	"name": "copy_transformed_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_raw_cases_death",
						"type": "DatasetReference"
					},
					"name": "ReadingCasesAndDeathData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "df_processed_cases_death",
						"type": "DatasetReference"
					},
					"name": "StoringDataIntoADLS"
				}
			],
			"transformations": [
				{
					"name": "FilterEuropeanDataOnly"
				},
				{
					"name": "SelectSpecificColumns"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as boolean,\n\t\tdate as date,\n\t\trate_14_day as boolean,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReadingCasesAndDeathData\nReadingCasesAndDeathData filter(continent=='Europe' && not(isNull(country_code))) ~> FilterEuropeanDataOnly\nFilterEuropeanDataOnly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\tsource,\n\t\teach(match(name =='date'),\n\t\t\t'reported'+'_date' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSpecificColumns\nSelectSpecificColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StoringDataIntoADLS"
		}
	}
}