{
	"name": "transform_cases_data_store_adls",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_raw_cases_death",
						"type": "DatasetReference"
					},
					"name": "ReadCasesAndDeathData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "df_processed_cases_death_csv",
						"type": "DatasetReference"
					},
					"name": "StoreTransformDataToADLS"
				}
			],
			"transformations": [
				{
					"name": "FilterEuropeanDataOnly"
				},
				{
					"name": "SelectParticularColumnsOnly"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          daily_count as string,",
				"          date as string,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadCasesAndDeathData",
				"ReadCasesAndDeathData filter(continent=='Europe' && not(isNull(country_code))) ~> FilterEuropeanDataOnly",
				"FilterEuropeanDataOnly select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          source,",
				"          each(match(name=='date'),",
				"               'reported'+'_date' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectParticularColumnsOnly",
				"SelectParticularColumnsOnly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> StoreTransformDataToADLS"
			]
		}
	}
}